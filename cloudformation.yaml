---
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: AWS Lex API Gateway Proxy
Parameters:
  StackBucketName:
    Type: String
    Description: The bucket where the Swagger YAML file is located
Resources:
  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: 'STAGING'
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: !Sub s3://${StackBucketName}/swagger-api-gateway-staging.yaml
      StageName: 'PROD'
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: !Sub s3://${StackBucketName}/swagger-api-gateway-prod.yaml

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: root
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: arn:aws:logs:*:*:*
          - Effect: Allow
            Action:
            - lex:PostText
            Resource: arn:aws:lex:*:*:*

  LambdaApiGatewayExecutionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt lexproxyfunction.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Join
        - ''
        - - 'arn:aws:execute-api:'
          - !Ref AWS::Region
          - ":"
          - !Ref AWS::AccountId
          - ":"
          - !Ref ApiGateway
          - "/*/*"

  lexproxyfunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: LexProxy
      Description: Lex Proxy Function
      CodeUri: ./lex-proxy.zip
      Handler: dist/bin/lambda.default
      MemorySize: 128
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: nodejs8.10
      Timeout: 30
      Events:
        ProxyApiRoot:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /
            Method: POST
  LambdaProdAlias:
    Type: AWS::Lambda::Alias
    Properties:
      Description: Alias to production version of lambda
      FunctionName: !Ref lexproxyfunction
      FunctionVersion: '$LATEST'
      Name: 'Prod'

  LambdaStagingAlias:
    Type: AWS::Lambda::Alias
    Properties:
      Description: Alias to staging version of lambda
      FunctionName: !Ref lexproxyfunction
      FunctionVersion: '$LATEST'
      Name: 'Staging'

Outputs:
  LambdaFunctionConsoleUrl:
    Description: Console URL for the Lambda Function.
    Value: !Join
      - ''
      - - https://
        - !Ref AWS::Region
        - ".console.aws.amazon.com/lambda/home?region="
        - !Ref AWS::Region
        - "#/functions/"
        - !Ref lexproxyfunction

  ApiGatewayConsoleUrl:
    Description: Console URL for the API Gateway API's Prod Stage.
    Value: !Join
      - ''
      - - https://
        - !Ref AWS::Region
        - ".console.aws.amazon.com/apigateway/home?region="
        - !Ref AWS::Region
        - "#/apis/"
        - !Ref ApiGateway

  ProdApiUrl:
    Description: Invoke URL for your Prod API. Clicking this link will perform a GET request
      on the root resource of your API.
    Value: !Join
      - ''
      - - https://
        - !Ref ApiGateway
        - ".execute-api."
        - !Ref AWS::Region
        - ".amazonaws.com/prod/"